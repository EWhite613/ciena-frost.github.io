{{#frost-scroll }}
  <div class="guide-introduction">
      <div class="header">
          {{frost-svg class='frost-logo' path='guide/frost'}}
          <span class="project">
              <div class="title">
                  Frost
              </div>
            <div class="sub-title">
                UI styles, conventions, patterns and code for Ciena
            </div>
          </span>
      </div>
      <h3>What is Frost?</h3>
      <p>
          An initiative to establish common styles, conventions and code for Ciena UIs
          using a collaborative approach inspired by open source projects.
      </p>

      <h3>Goals</h3>
      <h4>Consistency</h4>
      <p>
          Frost focuses on producing a consistent look and feel across the Ciena suite of UI
          products.  Common UI elements and patterns are identified and standardized for use in all Ciena
          UIs.  Consistency provides the following benefits:
      </p>
      <ul>
          <li><b>Professional styling</b> - UI often drives perception of a product, shared use of Visual Interaction Designers</li>
          <li><b>User experience</b> - Well-designed workflow and user interaction patterns for common Ciena user personas</li>
          <li><b>User experience/productivity</b> - one UI paradigm; learned once, used everywhere</li>
          <li><b>Brand awareness</b> - all UIs across the Ciena suite are easily identified as Ciena UIs</li>
          <li><b>Lower development costs</b> - common UI decisions and development are done once for all products</li>
          <li><b>Increased robustness</b> - UIs are tested across multiple product bases</li>
      </ul>

      <h4>Community</h4>
      <p>
          A strong development community is able to accomplish far more than any individual could hope to
          accomplish.  Cross-product collaboration strengthens the bonds between developers and broadens
          perspectives.  Some benefits of a large community are:
      </p>
      <ul>
          <li><b>Faster development</b> - solutions to standard problems are provided so that more time can be spent building unique product features</li>
          <li><b>More experience</b> - more angles are considered when developing common components</li>
          <li><b>Shared responsibility</b> - the weight of research and development is distributed</li>
          <li><b>Better support</b> - solutions to issues are usually in the community, more people are available for questions</li>
          <li><b>Cross-product development</b> - code bases are predictable, developers can ramp up quickly</li>
      </ul>

      <h4>Convention</h4>
      <p>
          Common use cases should be easy to develop.  Frost buys into a "convention over configuration" philosophy.  
          Frost components and CSS are developed with a focus on strong defaults; <b>less boilerplate, faster features</b>.
      </p>
      <p>
          When defaults don't suffice, Frost allows granular control of presentation and logic.  Some custom solutions 
          will be completely unique, many will be useful to the Frost community.  Everyone is encouraged to contribute 
          to the project and help is available for new community members.
      </p>

      <h4>Abstraction</h4>
      <p>
          The web ecosystem evolves at a torrid pace.  New standards, frameworks and components emerge on a
          weekly basis and tracking the flood of information can be a full time job.
      </p>
      <p>
          To avoid being left behind while simultaneously keeping products stable Frost abstracts the implementation of 
          solutions behind a stable Frost <b>component interface</b>, allowing the implementation to evolve while the usage
          remains stable.  When interfaces change, Frost makes use of <b>semantic versioning</b> to avoid breaking existing 
          products.
      </p>
  </div>
{{/frost-scroll}}